name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_DIR: build
  TESTS_DIR: .github/tests

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jwlawson/actions-setup-cmake@v1
        with:
          version: '3.23'
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}

  unit-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          ctest --output-on-failure

  integration-tests:
    needs: [build, unit-tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_num: [1, 2]
    steps:
      - uses: actions/checkout@v4
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          INPUT="../${{ env.TESTS_DIR }}/input/input_${{ matrix.test_num }}"
          OUT="../${{ env.TESTS_DIR }}/output/output_${{ matrix.test_num }}"
          ERR="../${{ env.TESTS_DIR }}/error/error_${{ matrix.test_num }}"
          [ -f "$OUT" ] || { echo "::error::Missing $OUT"; exit 1; }
          [ -f "$ERR" ] || { echo "::error::Missing $ERR"; exit 1; }
          if [ -f "$INPUT" ]; then
            ./run "$INPUT" > actual_out 2> actual_err
          else
            ./run > actual_out 2> actual_err
          fi
          diff -u "$OUT" actual_out || exit 1
          diff -u "$ERR" actual_err || exit 1
