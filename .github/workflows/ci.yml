name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_DIR: build
  TESTS_DIR: .github/tests

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jwlawson/actions-setup-cmake@v1
        with:
          version: '3.23'
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}

  unit-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          ctest --output-on-failure

  integration-tests:
    needs: [build, unit-tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_num: [1, 2]
    steps:
      - uses: actions/checkout@v4
      - run: |
          chmod +x .github/build.sh
          .github/build.sh ${{ env.BUILD_DIR }}
          cd ${{ env.BUILD_DIR }}
          INPUT="../${{ env.TESTS_DIR }}/input/input_${{ matrix.test_num }}"
          OUT="../${{ env.TESTS_DIR }}/output/output_${{ matrix.test_num }}"
          ERR="../${{ env.TESTS_DIR }}/error/error_${{ matrix.test_num }}"
          
          if [ ! -f "$OUT" ] || [ ! -f "$ERR" ]; then
          echo "::warning::Test files missing for test ${{ matrix.test_num }}"
          exit 0
          fi
          
          if [ -f "$INPUT" ]; then
          ./run "$INPUT" > actual_out 2> actual_err || EXIT_CODE=$?
          else
          ./run > actual_out 2> actual_err || EXIT_CODE=$?
          fi
          
          if [ ${EXIT_CODE:-0} -eq 1 ]; then
          echo "::notice::Test ${{ matrix.test_num }} returned exit code 1 (expected behavior)"
          elif [ ${EXIT_CODE:-0} -ne 0 ]; then
          echo "::error::Test ${{ matrix.test_num }} failed with exit code ${EXIT_CODE}"
          exit ${EXIT_CODE}
          fi
          
          diff -u "$OUT" actual_out || DIFF_OUT=$?
          diff -u "$ERR" actual_err || DIFF_ERR=$?
          
          if [ ${DIFF_OUT:-0} -ne 0 ] || [ ${DIFF_ERR:-0} -ne 0 ]; then
          echo "::error::Test ${{ matrix.test_num }} output mismatch"
          exit 1
          fi
